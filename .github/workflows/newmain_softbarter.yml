name: Build and Deploy â€“ Unified (Backend, Web, Mobile)

on:
  push:
    branches:
      - NewMain
  workflow_dispatch:

env:
  DOTNET_VERSION: '8.0.x'
  AZURE_WEBAPP_NAME: softbarter-api
  AZURE_WEBAPP_PACKAGE_PATH: './backend/SoftBarter.API'
  REACT_APP_API_URL: https://softbarter-api.azurewebsites.net
  EXPO_TOKEN: ${{ secrets.EXPO_TOKEN }}

jobs:
  build-backend:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Setup .NET
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: ${{ env.DOTNET_VERSION }}

      - name: Restore dependencies
        run: dotnet restore
        working-directory: ${{ env.AZURE_WEBAPP_PACKAGE_PATH }}

      - name: Build application
        run: dotnet build --no-restore --configuration Release
        working-directory: ${{ env.AZURE_WEBAPP_PACKAGE_PATH }}

      - name: Run tests
        run: dotnet test --no-build --configuration Release --verbosity normal
        working-directory: ${{ env.AZURE_WEBAPP_PACKAGE_PATH }}
        continue-on-error: true

      - name: Publish application
        run: dotnet publish --no-build --configuration Release --output ./publish
        working-directory: ${{ env.AZURE_WEBAPP_PACKAGE_PATH }}

      - name: Upload backend artifact
        uses: actions/upload-artifact@v4
        with:
          name: backend-publish
          path: ${{ env.AZURE_WEBAPP_PACKAGE_PATH }}/publish

  deploy-backend:
    runs-on: ubuntu-latest
    needs: build-backend
    steps:
      - name: Download backend artifact
        uses: actions/download-artifact@v4
        with:
          name: backend-publish

      - name: Deploy to Azure Web App
        uses: azure/webapps-deploy@v2
        with:
          app-name: ${{ env.AZURE_WEBAPP_NAME }}
          publish-profile: ${{ secrets.AZURE_WEBAPP_PUBLISH_PROFILE }}
          package: backend-publish

      - name: Health Check
        run: |
          sleep 30
          curl -f https://${{ env.AZURE_WEBAPP_NAME }}.azurewebsites.net/health || exit 1

  build-web:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'
          cache-dependency-path: web/package-lock.json

      - name: Install dependencies
        run: npm ci
        working-directory: ./web

      - name: Run tests
        run: npm test -- --coverage --watchAll=false
        working-directory: ./web

      - name: Build application
        run: npm run build
        working-directory: ./web
        env:
          REACT_APP_API_URL: ${{ env.REACT_APP_API_URL }}

      - name: Upload web artifact
        uses: actions/upload-artifact@v4
        with:
          name: web-build
          path: web/build

  deploy-web:
    runs-on: ubuntu-latest
    needs: build-web
    steps:
      - name: Download web artifact
        uses: actions/download-artifact@v4
        with:
          name: web-build

      - name: Deploy to Azure Static Web Apps
        uses: Azure/static-web-apps-deploy@v1
        with:
          azure_static_web_apps_api_token: ${{ secrets.AZURE_STATIC_WEB_APPS_API_TOKEN }}
          repo_token: ${{ secrets.GITHUB_TOKEN }}
          action: "upload"
          app_location: "/web"
          build_location: "/web/build"

  build-mobile:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'
          cache-dependency-path: mobile/package-lock.json

      - name: Setup Expo CLI
        run: npm install -g @expo/cli

      - name: Install dependencies
        run: npm ci
        working-directory: ./mobile

      - name: Build for Android
        run: npx expo build:android --type apk
        working-directory: ./mobile

      - name: Build for iOS
        run: npx expo build:ios --type archive
        working-directory: ./mobile

      - name: Upload APK artifact
        uses: actions/upload-artifact@v4
        with:
          name: android-apk
          path: mobile/*.apk

      - name: Upload iOS artifact
        uses: actions/upload-artifact@v4
        with:
          name: ios-archive
          path: mobile/*.ipa

  publish-mobile:
    runs-on: ubuntu-latest
    needs: build-mobile
    steps:
      - uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'
          cache-dependency-path: mobile/package-lock.json

      - name: Setup Expo CLI
        run: npm install -g @expo/cli

      - name: Install dependencies
        run: npm ci
        working-directory: ./mobile

      - name: Publish to Expo
        run: npx expo publish --non-interactive
        working-directory: ./mobile
        env:
          EXPO_TOKEN: ${{ env.EXPO_TOKEN }}

      - name: Create GitHub Release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: mobile-v${{ github.run_number }}
          release_name: Mobile App Release v${{ github.run_number }}
          body: |
            Mobile app build ${{ github.run_number }}

            ## Download Options
            - Install Expo Go app and scan QR code
            - Download APK from artifacts (Android)

            ## Changes
            - See commit history for detailed changes
          draft: false
          prerelease: false
